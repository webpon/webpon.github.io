import{_ as l,c as p,o as e,a as n,d as s,e as a}from"./app.eb325cc6.js";const k=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"computer/regular.md"}'),t={name:"computer/regular.md"},o=n("",66),c=s("p",{"1,2":""},"​ \\w{3,} @ [A-z0-9]+ (\\.）[A-z]{2,5})",-1),i=n("",24),r=s("p",{"1，":""},"​ - + 至少一个，相当于",-1),C=s("p",{"0，":""},"​ - * 0个或多个，相当于",-1),g=s("p",{"0，1":""},"​ - ？0个或1个，相当于",-1),A=n("",65),d=s("ol",null,[s("li",null,[s("p",null,[a("Email地址：^\\w+([-+.]\\w+)"),s("em",null,"@\\w+([-.]\\w+)"),a(".\\w+([-.]\\w+)*$")])]),s("li",null,[s("p",null,"域名：[a-zA-Z0-9][-a-zA-Z0-9]{0,62}(/.[a-zA-Z0-9][-a-zA-Z0-9]{0,62})+/.?")]),s("li",null,[s("p",null,"InternetURL：[a-zA-z]+://[^\\s]* 或 ^http://([\\w-]+.)+[\\w-]+(/[\\w-./?%&=]*)?$")]),s("li",null,[s("p",null,"手机号码：^(13[0-9]|14[5|7]|15[0|1|2|3|5|6|7|8|9]|18[0|1|2|3|5|6|7|8|9])\\d{8}$")]),s("li",null,[s("p",null,'电话号码("XXX-XXXXXXX"、"XXXX-XXXXXXXX"、"XXX-XXXXXXX"、"XXX-XXXXXXXX"、"XXXXXXX"和"XXXXXXXX)：^((\\d{3,4}-)|\\d{3.4}-)?\\d{7,8}$')]),s("li",{7:""},[s("p",null,"国内电话号码(0511-4405222、021-87888822)：\\d{3}-\\d{8}|\\d{4}-\\d")]),s("li",null,[s("p",null,"身份证号(15位、18位数字)：^\\d{15}|\\d{18}$")]),s("li",null,[s("p",null,"短身份证号码(数字、字母x结尾)：^([0-9]){7,18}(x|X)?$ 或 ^\\d{8,18}|[0-9x]{8,18}|[0-9X]{8,18}?$")]),s("li",null,[s("p",null,"帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：^[a-zA-Z][a-zA-Z0-9_]{4,15}$")]),s("li",null,[s("p",null,"密码(以字母开头，长度在6~18之间，只能包含字母、数字和下划线)：^[a-zA-Z]\\w{5,17}$")]),s("li",null,[s("p",null,[a("强密码(必须包含大小写字母和数字的组合，不能使用特殊字符，长度在8-10之间)：^(?=."),s("em",null,"\\d)(?=."),a("[a-z])(?=.*[A-Z]).{8,10}$")])]),s("li",{"1,2":""},[s("p",null,"日期格式：^\\d{4}-\\d{1,2}-\\d")]),s("li",null,[s("p",null,"一年的12个月(01～09和1～12)：^(0?[1-9]|1[0-2])$")]),s("li",null,[s("p",null,"一个月的31天(01～09和1～31)：^((0?[1-9])|((1|2)[0-9])|30|31)$")]),s("li",null,[s("p",null,"钱的输入格式：")]),s("li",null,[s("p",null,'1.有四种钱的表示形式我们可以接受:"10000.00" 和 "10,000.00", 和没有 "分" 的 "10000" 和 "10,000"：^[1-9][0-9]*$')]),s("li",null,[s("p",null,'2.这表示任意一个不以0开头的数字,但是,这也意味着一个字符"0"不通过,所以我们采用下面的形式：^(0|[1-9][0-9]*)$')]),s("li",null,[s("p",null,"3.一个0或者一个不以0开头的数字.我们还可以允许开头有一个负号：^(0|-?[1-9][0-9]*)$")]),s("li",null,[s("p",null,"4.这表示一个0或者一个可能为负的开头不为0的数字.让用户以0开头好了.把负号的也去掉,因为钱总不能是负的吧.下面我们要加的是说明可能的小数部分：^[0-9]+(.[0-9]+)?$")]),s("li",null,[s("p",null,'5.必须说明的是,小数点后面至少应该有1位数,所以"10."是不通过的,但是 "10" 和 "10.2" 是通过的：^[0-9]+(.[0-9]{2})?$')]),s("li",null,[s("p",null,"6.这样我们规定小数点后面必须有两位,如果你认为太苛刻了,可以这样：^[0-9]+(.[0-9]{1,2})?$")]),s("li",null,[s("p",null,"7.这样就允许用户只写一位小数.下面我们该考虑数字中的逗号了,我们可以这样：^[0-9]{1,3}(,[0-9]{3})*(.[0-9]{1,2})?$")])],-1),u=n("",2),y=[o,c,i,r,C,g,A,d,u];function D(h,b,v,m,q,$){return e(),p("div",null,y)}const X=l(t,[["render",D]]);export{k as __pageData,X as default};
